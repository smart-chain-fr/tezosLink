version: '1'
volumes:
  db_storage: {}
services:
  postgres:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
      - DATABASE_NAME
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
  tezolink-api:
    container_name: tezolink-api
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.api
    ports:
      - '3001:3001'
    restart: 'on-failure'
  prometheus:
    image: prom/prometheus:latest
    container_name: tezolink-api-prometheus
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro 
      - ./src/common/config/prometheus/prometheus.yml':/etc/prometheus/prometheus.yml'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    depends_on: 
      - tezolink-api

