export type QueryModifier<T> = {
    numericValues?: (keyof T)[] | undefined;
    booleanValues?: (keyof T)[] | undefined;
};
type TQueryModifier = {
    numericValues?: string[] | undefined;
    booleanValues?: string[] | undefined;
};
export const processFindManyQuery: (query: any, queryModifier?: TQueryModifier) => {
    where: any;
    include: Record<string, any> | undefined;
    orderBy: Record<string, "asc" | "desc">[] | undefined;
    skip: number | undefined;
    take: number | undefined;
};
export const processFindUniqueQuery: (query: any) => {
    include: Record<string, any> | undefined;
};

//# sourceMappingURL=types.d.ts.map
