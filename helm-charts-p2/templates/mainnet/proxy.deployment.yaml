{{- if .Values.proxy.mainnet.enabled}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}-proxy
  namespace: {{ include "helpers.namespace" . | quote }}
  labels: {{ include "helpers.labels.mainnet.proxy" . | nindent 4 }}
spec:
  replicas: {{ .Values.proxy.mainnet.replicaCount }}
  selector:
    matchLabels:
      {{- include "helpers.proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helpers.proxy.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: proxy-sa
      containers:
        - name: proxy-mainnet
          image: "{{ .Values.proxy.mainnet.image.repository }}:{{ .Values.proxy.mainnet.image.tag }}"
          imagePullPolicy: {{ .Values.proxy.mainnet.image.pullPolicy }}
          resources: 
{{- toYaml .Values.proxy.mainnet.resources | nindent 12 }}
          env:
            - name: API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helpers.fullname" . }}-cm
                  key: API_URL
            - name: PROXY_MAINNET_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helpers.fullname" . }}-cm
                  key: PROXY_MAINNET_URL
            - name: FRONT_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helpers.fullname" . }}-cm
                  key: FRONT_URL
          {{- range $key, $val := .Values.proxy.mainnet.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          {{- if .Values.proxy.mainnet.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.proxy.mainnet.livenessProbe.path }}
              port: {{ .Values.proxy.mainnet.livenessProbe.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.proxy.mainnet.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.proxy.mainnet.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.proxy.mainnet.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.proxy.mainnet.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.proxy.mainnet.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.proxy.mainnet.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.proxy.mainnet.readinessProbe.path }}
              port: {{ .Values.proxy.mainnet.readinessProbe.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.proxy.mainnet.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.proxy.mainnet.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.proxy.mainnet.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.proxy.mainnet.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.proxy.mainnet.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.proxy.mainnet.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.proxy.mainnet.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.proxy.mainnet.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.proxy.mainnet.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
{{- end }}